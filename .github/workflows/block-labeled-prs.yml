name: Block PR if Tasks Are Open

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]
  pull_request_review:
    types: [submitted, edited, dismissed]
  issue_comment:
    types: [created, edited, deleted]

jobs:
  check-tasks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Check for open tasks and manage label
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request || context.payload.issue?.pull_request;
            if (!pr) return;

            const { owner, repo } = context.repo;
            const pull_number = pr.number;
            const labelName = "Blocked by task";
            const labelColor = "d73a4a"; // GitHub standard red
            const labelDesc  = "PR is blocked because of an open task";

            // 1. Ensure the repo label exists
            const { data: repoLabels } = await github.rest.issues.listLabelsForRepo({
              owner, repo, per_page: 100
            });
            if (!repoLabels.some(l => l.name === labelName)) {
              await github.rest.issues.createLabel({
                owner,
                repo,
                name: labelName,
                color: labelColor,
                description: labelDesc
              });
              console.log(`🆕 Created repo label '${labelName}'.`);
            }

            // 2. Fetch latest PR body & check for open tasks
            const { data: prData } = await github.rest.pulls.get({
              owner, repo, pull_number
            });
            const hasOpenTasks = /- \[ \]/.test(prData.body || "");

            // 3. Check if PR already has the label
            const { data: issueLabels } = await github.rest.issues.listLabelsOnIssue({
              owner, repo, issue_number: pull_number
            });
            const hasLabel = issueLabels.some(l => l.name === labelName);

            if (hasOpenTasks) {
              core.setFailed("❌ PR has open tasks. Please complete all tasks before merging.");
              if (!hasLabel) {
                await github.rest.issues.addLabels({
                  owner,
                  repo,
                  issue_number: pull_number,
                  labels: [labelName],
                });
                console.log(`🚫 '${labelName}' label added.`);
              }
            } else {
              console.log("✅ All tasks are complete.");
              if (hasLabel) {
                await github.rest.issues.removeLabel({
                  owner,
                  repo,
                  issue_number: pull_number,
                  name: labelName,
                });
                console.log(`🧹 '${labelName}' label removed.`);
              }
            }
